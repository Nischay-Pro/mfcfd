module device_data_structure_mod


        use parameter_mod
        use DATA_STRUCTURE_MOD_DIFF
        use cudafor
        use cudadevice

        implicit none

        integer, constant :: mp_d, gamma_d, mach_d
        real*8, constant :: cfl_d, power_d, vl_d, eu_d
        real*8, constant :: qinf1_d, qinf2_d, qinf3_d, qinf4_d

        type :: points_d

                real*8, device, dimension(:,:), allocatable :: x
                real*8, device, dimension(:,:), allocatable :: xb

                integer, device, dimension(:), allocatable :: nbhs
                integer, device, dimension(:,:), allocatable :: conn

                real*8, device, dimension(:,:), allocatable :: q
                real*8, device, dimension(:,:), allocatable :: qb
                real*8, device, dimension(:,:,:), allocatable :: qm
                real*8, device, dimension(:,:,:), allocatable :: qmb
                real*8, device, dimension(:,:,:), allocatable :: dq
                real*8, device, dimension(:,:,:), allocatable :: dqb

        end type points_d
        
        type(points_d) :: point_d

    contains

        subroutine allocate_device_soln()
                implicit none

                allocate(point_d%x(2,max_points))
                allocate(point_d%xb(2,max_points))

                allocate(point_d%nbhs(max_points))

                allocate(point_d%conn(max_points, 15))

                allocate(point_d%q(4, max_points))
                allocate(point_d%qb(4, max_points))
                allocate(point_d%qm(2,4,max_points))
                allocate(point_d%qmb(2,4,max_points))
                allocate(point_d%dq(2,4,max_points))
                allocate(point_d%dqb(2,4,max_points))

        end subroutine

        subroutine deallocate_device_soln()
                implicit none

                deallocate(point_d%x)
                deallocate(point_d%xb)
                
                deallocate(point_d%q)
                deallocate(point_d%qb)

                deallocate(point_d%dq)
                deallocate(point_d%dqb)

                deallocate(point_d%qm)
                deallocate(point_d%qmb)

                deallocate(point_d%nbhs)
                deallocate(point_d%conn)

        end subroutine

        subroutine host_to_device()
                implicit none

                ! set constant point info on device
                mp_d = max_points
                cfl_d = cfl
                power_d = power
                vl_d = vl_const
                eu_d = euler
                gamma_d = gamma
                mach_d = mach
                qinf1_d = q_inf(1)
                qinf2_d = q_inf(2)
                qinf3_d = q_inf(3)
                qinf4_d = q_inf(4)
                ! transfer from host to device(solution)
                point_d%prim = point%prim
                ! grid variables transfer
                point_d%x(1,:) = point%x
                point_d%x(2,:) = point%y
                point_d%nx(1,:) = point%nx
                point_d%nx(2,:) = point%ny
                point_d%nbhs = point%nbhs
                point_d%conn = point%conn
                point_d%flag = point%flag_1
                point_d%min_dist = point%min_dist
                point_d%xpos_nbhs = point%xpos_nbhs
                point_d%xneg_nbhs = point%xneg_nbhs
                point_d%ypos_nbhs = point%ypos_nbhs
                point_d%yneg_nbhs = point%yneg_nbhs
                point_d%xpos_conn = point%xpos_conn
                point_d%xneg_conn = point%xneg_conn
                point_d%ypos_conn = point%ypos_conn
                point_d%yneg_conn = point%yneg_conn

        end subroutine

        subroutine device_to_host()
                implicit none

                point%prim    = point_d%prim

        end subroutine

end module device_data_structure_mod
